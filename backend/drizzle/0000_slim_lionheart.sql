CREATE TYPE "public"."day" AS ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday');--> statement-breakpoint
CREATE TYPE "public"."exercise_type" AS ENUM('Cardio', 'Equipment', 'Reps Only');--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Exercises" (
	"exercise_id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "Workout_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"name" varchar NOT NULL,
	"exerciseType" "exercise_type" NOT NULL,
	"description" text NOT NULL,
	"body_part" varchar NOT NULL,
	"primary_muscle" varchar NOT NULL,
	"secondary_muscle" varchar NOT NULL,
	"met_value" real NOT NULL,
	"intensity" varchar NOT NULL,
	"imageUrl" varchar,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Records" (
	"record_id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "Records_record_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" bigint NOT NULL,
	"exercise_id" bigint NOT NULL,
	"date" date NOT NULL,
	"sets_completed" smallint NOT NULL,
	"reps_completed" smallint NOT NULL,
	"duration_min" real NOT NULL,
	"weight" real NOT NULL,
	"distance" real NOT NULL,
	"calories_burned" real NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "User" (
	"user_id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "User_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"username" varchar NOT NULL,
	"email" varchar NOT NULL,
	"password" varchar NOT NULL,
	"age" smallint NOT NULL,
	"gender" varchar NOT NULL,
	"height" real NOT NULL,
	"weight" real NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "User Workout Exercise" (
	"workout_exercise_id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "User Workout Exercise_workout_exercise_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"plan_id" bigint NOT NULL,
	"exercise_Id" bigint NOT NULL,
	"sets" smallint NOT NULL,
	"reps" smallint NOT NULL,
	"duration_min" real NOT NULL,
	"weight" real NOT NULL,
	"distance" real NOT NULL,
	"rest_time_per_set_sec" smallint NOT NULL,
	"day" "day" NOT NULL,
	"completed" boolean NOT NULL,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "Workout Plans" (
	"plan_id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "Workout Plans_plan_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" bigint NOT NULL,
	"name" varchar NOT NULL,
	"intensity" varchar,
	"duration_days" smallint NOT NULL,
	"days_completed" smallint,
	"goal" varchar NOT NULL,
	"progress" smallint NOT NULL,
	"completed" boolean,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "Records" ADD CONSTRAINT "Records_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "Records" ADD CONSTRAINT "Records_workout_id_fkey" FOREIGN KEY ("exercise_id") REFERENCES "public"."Exercises"("exercise_id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "User Workout Exercise" ADD CONSTRAINT "User Workout Exercise_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "public"."Workout Plans"("plan_id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "User Workout Exercise" ADD CONSTRAINT "User Workout Exercise_workout_id_fkey" FOREIGN KEY ("exercise_Id") REFERENCES "public"."Exercises"("exercise_id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "Workout Plans" ADD CONSTRAINT "Workout Plans_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "public"."User"("user_id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
